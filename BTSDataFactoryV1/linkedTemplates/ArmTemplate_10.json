{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "BTSDataFactoryV1"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ContentDatabase')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Node",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AmazonS3ReadSettings",
									"recursive": true,
									"wildcardFolderPath": "publish/*/latest",
									"wildcardFileName": "node.json",
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ContentDB_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ContentDatabase",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Node_en-US",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AmazonS3ReadSettings",
									"recursive": true,
									"wildcardFolderPath": "publish/*/latest",
									"wildcardFileName": "node_en-US.json",
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ContentDB_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ContentDatabase",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-02-22T05:57:49Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_3eq')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_3eq",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "users"
							},
							{
								"name": "Destination",
								"value": "microsoftoutputv4//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "MongoDbV2Source",
								"batchSize": 100,
								"filter": "{\nemail: /^\\d+$/, 'userProfile.selectedjourneyId': '6e4277045af59c9e4336'\n}",
								"cursorMethods": {
									"project": "{_id: 1,\n            email: 1,\njourneys:1}"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']['$oid']"
										},
										"sink": {
											"name": "$oid",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['journeyId']"
										},
										"sink": {
											"name": "journeyId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['journeyName']"
										},
										"sink": {
											"name": "journeyName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['cohortId']"
										},
										"sink": {
											"name": "cohortId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['states']"
										},
										"sink": {
											"name": "journeys'][0]['revisions_1_states'][",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['email']"
										},
										"sink": {
											"name": "email",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_3eq",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_3eq",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-05-24T08:33:44Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/billing_micro')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_s4r",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "users"
							},
							{
								"name": "Destination",
								"value": "microsoftoutputv3//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "MongoDbV2Source",
								"batchSize": 100,
								"filter": "{\n email: /^\\d+$/\n}",
								"cursorMethods": {
									"project": "{   _id: 1,\n            email: 1,\n            fname:1,\n            lname:1,\n            createdAt:1,\n            journeys: 1\n}"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"filePattern": "arrayOfObjects"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']['$oid']"
										},
										"sink": {
											"path": "$['_id']"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['journeyId']"
										},
										"sink": {
											"path": "$['journeyId']"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['journeyName']"
										},
										"sink": {
											"path": "$['journeyName']"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['cohortId']"
										},
										"sink": {
											"path": "$['cohortId']"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['states']"
										},
										"sink": {
											"path": "$['states']"
										}
									},
									{
										"source": {
											"path": "$['fname']"
										},
										"sink": {
											"path": "$['fname']"
										}
									},
									{
										"source": {
											"path": "$['lname']"
										},
										"sink": {
											"path": "$['lname']"
										}
									},
									{
										"source": {
											"path": "$['email']"
										},
										"sink": {
											"path": "$['email']"
										}
									},
									{
										"source": {
											"path": "$['createdAt']['$date']"
										},
										"sink": {
											"path": "$['createdAt']['$date']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_s4r",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_s4r",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-05-24T08:33:44Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/mDLZ_DATA COPY_Only after dataflow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "from_dataflow_blob_storage_to_mongodb",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "CosmosDbMongoDbApiSink",
								"writeBatchTimeout": "00:30:00",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"ordinal": 1
										},
										"sink": {
											"path": "$"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "dataflowoutput",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CosmosDbMongoDbApiCollection23",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-05-24T08:33:44Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/microsoft billing project')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "thi sis to copy all microsoft dat ato json",
				"activities": [
					{
						"name": "Copy_skg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "users"
							},
							{
								"name": "Destination",
								"value": "microsoftoutputv3//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "MongoDbV2Source",
								"batchSize": 100,
								"filter": "{email: /^\\d+$/}\n",
								"cursorMethods": {
									"project": "{ _id: 1,\n            email: 1,\n            fname:1,\n            lname:1,\n            createdAt:1,\n            journeys: 1,}"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"filePattern": "arrayOfObjects"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']['$oid']"
										},
										"sink": {
											"path": "$['_id']"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['journeyId']"
										},
										"sink": {
											"path": "$['journye_id']"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['journeyName']"
										},
										"sink": {
											"path": "$['journye_name']"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['cohortId']"
										},
										"sink": {
											"path": "$['cohort_id']"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['states']"
										},
										"sink": {
											"path": "$['activity_state']"
										}
									},
									{
										"source": {
											"path": "$['fname']"
										},
										"sink": {
											"path": "$['fname']"
										}
									},
									{
										"source": {
											"path": "$['lname']"
										},
										"sink": {
											"path": "$['lname']"
										}
									},
									{
										"source": {
											"path": "$['email']"
										},
										"sink": {
											"path": "$['email']"
										}
									},
									{
										"source": {
											"path": "$['createdAt']['$date']"
										},
										"sink": {
											"path": "$['createdAt']['$date']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_skg",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_skg",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "String"
					},
					"windowEnd": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2022-05-24T08:33:44Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/microsoft_json_object')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_nk4",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "users"
							},
							{
								"name": "Destination",
								"value": "microsoftoutputv5//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "MongoDbV2Source",
								"batchSize": 100,
								"filter": "{\nemail: /^\\d+$/, 'userProfile.selectedjourneyId': 'c915a00346407fe85c03' }\n",
								"cursorMethods": {
									"project": "{_id: 1,\n            email: 1,\n            fname:1,\n            lname:1,\n            createdAt:1,\n            journeys: 1}"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"filePattern": "setOfObjects"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']['$oid']"
										},
										"sink": {
											"path": "$['_id']"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['journeyId']"
										},
										"sink": {
											"path": "$['journey_id']"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['journeyName']"
										},
										"sink": {
											"path": "$['journey_name']"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['cohortId']"
										},
										"sink": {
											"path": "$['cohortId']"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['states']"
										},
										"sink": {
											"path": "$['activity_state']"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['placeholder'][0]['title']"
										},
										"sink": {
											"path": "$['placeholdertitle']"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['placeholder'][0]['journeyId']"
										},
										"sink": {
											"path": "$['placeholder_journey_id']"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['placeholder'][0]['s3Path']"
										},
										"sink": {
											"path": "$['s3Path']"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['placeholder'][0]['breadcrumb']"
										},
										"sink": {
											"path": "$['breadcrumb']"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['placeholder'][0]['guid']"
										},
										"sink": {
											"path": "$['guid']"
										}
									},
									{
										"source": {
											"path": "$['fname']"
										},
										"sink": {
											"path": "$['fname']"
										}
									},
									{
										"source": {
											"path": "$['lname']"
										},
										"sink": {
											"path": "$['lname']"
										}
									},
									{
										"source": {
											"path": "$['email']"
										},
										"sink": {
											"path": "$['email']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_nk4",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_nk4",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-05-24T08:33:44Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/microsoft_object_json_part_2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_ouc",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "users"
							},
							{
								"name": "Destination",
								"value": "microsoftoutputv5a//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "MongoDbV2Source",
								"batchSize": 100,
								"filter": "{\nemail: /^\\d+$/, 'userProfile.selectedjourneyId': '6e4277045af59c9e4336'\n}",
								"cursorMethods": {
									"project": "{ _id: 1,\n            email: 1,\n            fname:1,\n            lname:1,\n            createdAt:1,\n            journeys: 1}"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"filePattern": "setOfObjects"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']['$oid']"
										},
										"sink": {
											"path": "$['_id']"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['journeyId']"
										},
										"sink": {
											"path": "$['journeys']"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['journeyName']"
										},
										"sink": {
											"path": "$['journeyName']"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['cohortId']"
										},
										"sink": {
											"path": "$['cohortId']"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['states']"
										},
										"sink": {
											"path": "$['states']"
										}
									},
									{
										"source": {
											"path": "$['fname']"
										},
										"sink": {
											"path": "$['fname']"
										}
									},
									{
										"source": {
											"path": "$['lname']"
										},
										"sink": {
											"path": "$['lname']"
										}
									},
									{
										"source": {
											"path": "$['email']"
										},
										"sink": {
											"path": "$['email']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_ouc",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_ouc",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-05-24T08:33:44Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Abbottkafkacollection')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MongoDb kafka collection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MongoDbV2Collection",
				"schema": [],
				"typeProperties": {
					"collection": "completion"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbSqlApiCollection1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDb1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {},
				"typeProperties": {
					"collectionName": "TestAPI-storage"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbSqlApiCollection2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDb2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {},
				"typeProperties": {
					"collectionName": "TestAPI-storage"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_d7i')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "journeyname",
						"type": "varchar"
					},
					{
						"name": "email",
						"type": "varchar"
					},
					{
						"name": "cohortId",
						"type": "varchar"
					},
					{
						"name": "Content_id",
						"type": "varchar"
					},
					{
						"name": "status",
						"type": "varchar"
					},
					{
						"name": "type",
						"type": "varchar"
					},
					{
						"name": "title",
						"type": "varchar"
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "Content_id_Custom",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TEST"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_rp9')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "journeyname",
						"type": "varchar"
					},
					{
						"name": "email",
						"type": "varchar"
					},
					{
						"name": "cohortId",
						"type": "varchar"
					},
					{
						"name": "Content_id",
						"type": "varchar"
					},
					{
						"name": "status",
						"type": "varchar"
					},
					{
						"name": "type",
						"type": "varchar"
					},
					{
						"name": "title",
						"type": "varchar"
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "Content_id_Custom",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TEST"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MDLZSQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "TEST"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MongoDbV2Collection4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Abbott_user",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MongoDbV2Collection",
				"schema": [],
				"typeProperties": {
					"collection": "users"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResource1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Mondelez SPARK",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_2g5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "kafkaanalyticsconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MongoDbV2Collection",
				"schema": [],
				"typeProperties": {
					"collection": "admintooladoption"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_2m3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Abbott_user",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_collection": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "MongoDbV2Collection",
				"schema": [],
				"typeProperties": {
					"collection": {
						"value": "@dataset().cw_collection",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_36u')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "completion_20_kafka",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MongoDbV2Collection",
				"schema": [],
				"typeProperties": {
					"collection": "completion"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_5xq')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mondelez connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MongoDbV2Collection",
				"schema": [],
				"typeProperties": {
					"collection": "users"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_5xw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "kafkaanalyticsconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MongoDbV2Collection",
				"schema": [],
				"typeProperties": {
					"collection": "users"
				}
			},
			"dependsOn": []
		}
	]
}