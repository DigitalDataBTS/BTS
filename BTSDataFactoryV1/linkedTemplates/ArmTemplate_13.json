{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "BTSDataFactoryV1"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/reportcontentg3m4link')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "reportcontentg3m4link",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "WebTable",
				"schema": [],
				"typeProperties": {
					"index": 0
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/reportcontentg4m1link')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "reportcontentg4m1link",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "WebTable",
				"schema": [],
				"typeProperties": {
					"index": 0
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/reportcontentg4m2link')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "reportcontentg4m2link",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "WebTable",
				"schema": [],
				"typeProperties": {
					"index": 0
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/reportcontentg4m3link')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "reportcontentg4m3link",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "WebTable",
				"schema": [],
				"typeProperties": {
					"index": 0
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/reportcontentg4m4link')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "reportcontentg4m4link",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "WebTable",
				"schema": [],
				"typeProperties": {
					"index": 0
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/reportcontentg5m1link')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "reportcontentg5m1link",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "WebTable",
				"schema": [],
				"typeProperties": {
					"index": 0
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/reportcontentg5m2link')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "reportcontentg5m2link",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "WebTable",
				"schema": [],
				"typeProperties": {
					"index": 0
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/reportcontentg5m3link')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "reportcontentg5m3link",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "WebTable",
				"schema": [],
				"typeProperties": {
					"index": 0
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/reportcontentg5m4link')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "reportcontentg5m4link",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "WebTable",
				"schema": [],
				"typeProperties": {
					"index": 0
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/reportm1link')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "reportmqlink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "WebTable",
				"schema": [],
				"typeProperties": {
					"index": 0
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/reportm1scoringlink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "reportm1scoringlink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "WebTable",
				"schema": [],
				"typeProperties": {
					"index": 0
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/reportm2link')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "reportm2link",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "WebTable",
				"schema": [],
				"typeProperties": {
					"index": 0
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/reportm2scoringlink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "reportm2scoringlink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "WebTable",
				"schema": [],
				"typeProperties": {
					"index": 0
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/reportm3link')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "reportm3link",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "WebTable",
				"schema": [],
				"typeProperties": {
					"index": 0
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/reportm3scoringlink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "reportm3scoringlink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "WebTable",
				"schema": [],
				"typeProperties": {
					"index": 0
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/reportm4link')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "reportm4",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "WebTable",
				"schema": [],
				"typeProperties": {
					"index": 0
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/reportm4scoringlink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "reportm4scoringlink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "WebTable",
				"schema": [],
				"typeProperties": {
					"index": 0
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Zebra_Dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "sink_zebratech_journey_structure",
								"type": "DatasetReference"
							},
							"name": "Journeystructurezebra"
						},
						{
							"dataset": {
								"referenceName": "Zebra_sink",
								"type": "DatasetReference"
							},
							"name": "BlobStoreZebra"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "S3connection",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "flatten1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "filter1"
						},
						{
							"name": "join1"
						},
						{
							"name": "filter2"
						}
					],
					"script": "source(output(\n\t\tjourney as (key as string, value as string)[],\n\t\ttitle as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'documentPerLine') ~> Journeystructurezebra\nsource(output(\n\t\t{_id} as string,\n\t\tcohort_id as string,\n\t\tcompletion_time as timestamp,\n\t\temail as string,\n\t\tguid as string,\n\t\tjourneys_id as string,\n\t\tjourneys_name as string,\n\t\tstatus as string,\n\t\ttype as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'documentPerLine') ~> BlobStoreZebra\nJourneystructurezebra foldDown(unroll(journey, journey),\n\tmapColumn(\n\t\ttitle,\n\t\tkey = journey.key,\n\t\tvalue = journey.value\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> flatten1\nflatten1 derive(custom = regexReplace(key, '[^0-9]','')) ~> derivedColumn1\nderivedColumn1 filter(custom != \"\") ~> filter1\nBlobStoreZebra, filter1 join(guid == custom,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> join1\njoin1 filter(value!=\"\" && length(value) <50) ~> filter2\nfilter2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow12')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Excel1",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "Excel2",
								"type": "DatasetReference"
							},
							"name": "source2"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DelimitedText2",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Union1"
						},
						{
							"name": "hashingandsalt"
						},
						{
							"name": "DerivedColumn1"
						}
					],
					"script": "source(output(\n\t\tId as short,\n\t\tName as string,\n\t\tEmail as string,\n\t\tPassword as string,\n\t\tUserToken as string,\n\t\tMailSent as boolean,\n\t\tPasswordHash as string,\n\t\tUniversalId as string,\n\t\tUpdatedOn as string,\n\t\tDisabled as boolean,\n\t\tPasswordExpiry as string,\n\t\tFailedLoginAttemps as short,\n\t\tLastFailedLoginAttempt as string,\n\t\tRememberMeToken as string,\n\t\tPasswordChanged as string,\n\t\tVerifiedPassword as boolean\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource(output(\n\t\tId as short,\n\t\tName as string,\n\t\tEmail as string,\n\t\tPassword as string,\n\t\tUserToken as string,\n\t\tMailSent as boolean,\n\t\tPasswordHash as string,\n\t\tUniversalId as string,\n\t\tUpdatedOn as string,\n\t\tDisabled as boolean,\n\t\tPasswordExpiry as string,\n\t\tFailedLoginAttemps as short,\n\t\tLastFailedLoginAttempt as string,\n\t\tRememberMeToken as string,\n\t\tPasswordChanged as string,\n\t\tVerifiedPassword as boolean\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source2\nsource1, source2 union(byName: false)~> Union1\nDerivedColumn1 derive(Name = md5(left(toString(nextSequence()),3),Name),\n\t\tEmail = md5(left(toString(nextSequence()),3),Email),\n\tpartitionBy('roundRobin', 3)) ~> hashingandsalt\nUnion1 derive(nextseq = left(toString(nextSequence()),3),\n\t\tpartID = partitionId(),\n\t\trand = random(123),\n\t\tstatic = 1) ~> DerivedColumn1\nhashingandsalt sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow15')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Orc2",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DelimitedText4",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tRole as string,\n\t\t{First Name} as string,\n\t\t{Last Name} as string,\n\t\tEmail as string,\n\t\t{Overview. Overview - REMOVED} as string,\n\t\t{Overview. Overview} as string,\n\t\t{Overview. Schedule} as string,\n\t\t{Introduction. Module One guide} as string,\n\t\t{FLL Tryout. Leader roles or core capabilities} as string,\n\t\t{FLL Tryout. Biggest strengths} as string,\n\t\t{FLL Tryout. Most surprising - REMOVED} as string,\n\t\t{Pod 1. Salesforce Values card sort PDF} as string,\n\t\t{Pod 1. Your Leadership Brand. Value One} as string,\n\t\t{Pod 1. Your Leadership Brand. Value Two} as string,\n\t\t{Pod 1. Your Leadership Brand. Value Three} as string,\n\t\t{Pod 1. Your Leadership Brand. Importance} as string,\n\t\t{Pod 1. Your Leadership Brand. My behaviors} as string,\n\t\t{Pod 1. Your Leadership Brand. My brand} as string,\n\t\t{Pod 1. Your Leadership Brand. My best} as string,\n\t\t{Pod 1. Your Leadership Brand. Not my best} as string,\n\t\t{Pod 1. Your Leadership Brand. Statement} as string,\n\t\t{Pod 1. Catch Up. Email} as string,\n\t\t{Pod 1. Catch Up. Takeaways} as string,\n\t\t{Pod 1. Catch Up. Learning areas} as string,\n\t\t{Pod 1. Video Summary} as string,\n\t\t{Virtual Workshop 1. Catch Up. Email} as string,\n\t\t{Virtual Workshop 1. Catch Up. Takeaways} as string,\n\t\t{Virtual Workshop 1. Catch Up. Learning areas} as string,\n\t\t{Stretch Assignment 1. Instructional PDF} as string,\n\t\t{Stretch Assignment 1. L1. Pitfalls - CHANGED} as string,\n\t\t{Stretch Assignment 1. L1. Pitfalls} as string,\n\t\t{Stretch Assignment 1. L1. Actions} as string,\n\t\t{Stretch Assignment 1. L1. Accountable} as string,\n\t\t{Stretch Assignment 1. L1. Impact knowing pitfalls} as string,\n\t\t{Stretch Assignment 1. L1. Do differently - REMOVED} as string,\n\t\t{Stretch Assignment 1. L1. Email worked with - REMOVED} as string,\n\t\t{Stretch Assignment 1. L2. Pitfalls (G1) / Insight (G2...)} as string,\n\t\t{Stretch Assignment 1. L2. Recover (G1) / Advice (G2...)} as string,\n\t\t{Stretch Assignment 1. L2. Learn - REMOVED} as string,\n\t\t{Stretch Assignment 1. L2. Email worked with} as string,\n\t\t{Stretch Assignment 1. L3. Learn} as string,\n\t\t{Stretch Assignment 1. L3. Feedback - REMOVED} as string,\n\t\t{Stretch Assignment 1. L3. Teaching improve} as string,\n\t\t{Stretch Assignment 1. L3. Email worked with} as string,\n\t\t{Pod 2. Committed listening. What did you notice} as string,\n\t\t{Pod 2. Committed listening. Whats in the way} as string,\n\t\t{Pod 2. MBIR. Leadership shift} as string,\n\t\t{Pod 2. MBIR. Leadership shift. Change} as string,\n\t\t{Pod 2. MBIR. Mindset. From} as string,\n\t\t{Pod 2. MBIR. Mindset. To} as string,\n\t\t{Pod 2. MBIR. Mindset. Change} as string,\n\t\t{Pod 2. MBIR. Behavior. From} as string,\n\t\t{Pod 2. MBIR. Behavior. To} as string,\n\t\t{Pod 2. MBIR. Behavior. Change} as string,\n\t\t{Pod 2. MBIR. Impact. From} as string,\n\t\t{Pod 2. MBIR. Impact. To} as string,\n\t\t{Pod 2. MBIR. Impact. Change} as string,\n\t\t{Pod 2. MBIR. Result} as string,\n\t\t{Pod 2. MBIR. Result. Change} as string,\n\t\t{Pod 2. MBIR. Other Comments} as string,\n\t\t{Pod 2. Catch Up. Email} as string,\n\t\t{Pod 2. Catch Up. Takeaways} as string,\n\t\t{Pod 2. Catch Up. Learning areas} as string,\n\t\t{Pod 2. Video Summary} as string,\n\t\t{Stretch Assignment 2. Instructional PDF} as string,\n\t\t{Stretch Assignment 2. L1. MBIR change (G1) / Insights (G2...)} as string,\n\t\t{Stretch Assignment 2. L1. Insights (G1) / Learn (G2...)} as string,\n\t\t{Stretch Assignment 2. L1. Help - REMOVED} as string,\n\t\t{Stretch Assignment 2. L1. Email worked with} as string,\n\t\t{Stretch Assignment 2. L2. MBIR change} as string,\n\t\t{Stretch Assignment 2. L2. Shifts (G1) / Do differently (G2...)} as string,\n\t\t{Stretch Assignment 2. L2. Do differently - REMOVED} as string,\n\t\t{Stretch Assignment 2. L2. Email worked with} as string,\n\t\t{Stretch Assignment 2. L3. Difficult (G1) / Connecting to IDP (G2...)} as string,\n\t\t{Stretch Assignment 2. L3. V2MOM Mindset shift (G1) / Do differently (G2...)} as string,\n\t\t{Stretch Assignment 2. L3. V2MOM Assumptions - REMOVED} as string,\n\t\t{Stretch Assignment 2. L3. V2MOM Do differently - REMOVED} as string,\n\t\t{Stretch Assignment 2. L3. Actions Assumptions - REMOVED} as string,\n\t\t{Stretch Assignment 2. L3. Email worked with} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": []
		}
	]
}