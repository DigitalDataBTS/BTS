{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "BTSDataFactoryV1"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/reportcontentg5m4link')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "reportcontentg5m4link",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "WebTable",
				"schema": [],
				"typeProperties": {
					"index": 0
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/reportm1link')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "reportmqlink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "WebTable",
				"schema": [],
				"typeProperties": {
					"index": 0
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/reportm1scoringlink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "reportm1scoringlink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "WebTable",
				"schema": [],
				"typeProperties": {
					"index": 0
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/reportm2link')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "reportm2link",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "WebTable",
				"schema": [],
				"typeProperties": {
					"index": 0
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/reportm2scoringlink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "reportm2scoringlink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "WebTable",
				"schema": [],
				"typeProperties": {
					"index": 0
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/reportm3link')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "reportm3link",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "WebTable",
				"schema": [],
				"typeProperties": {
					"index": 0
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/reportm3scoringlink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "reportm3scoringlink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "WebTable",
				"schema": [],
				"typeProperties": {
					"index": 0
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/reportm4link')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "reportm4",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "WebTable",
				"schema": [],
				"typeProperties": {
					"index": 0
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/reportm4scoringlink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "reportm4scoringlink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "WebTable",
				"schema": [],
				"typeProperties": {
					"index": 0
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow12')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Excel1",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "Excel2",
								"type": "DatasetReference"
							},
							"name": "source2"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DelimitedText2",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Union1"
						},
						{
							"name": "hashingandsalt"
						},
						{
							"name": "DerivedColumn1"
						}
					],
					"script": "source(output(\n\t\tId as short,\n\t\tName as string,\n\t\tEmail as string,\n\t\tPassword as string,\n\t\tUserToken as string,\n\t\tMailSent as boolean,\n\t\tPasswordHash as string,\n\t\tUniversalId as string,\n\t\tUpdatedOn as string,\n\t\tDisabled as boolean,\n\t\tPasswordExpiry as string,\n\t\tFailedLoginAttemps as short,\n\t\tLastFailedLoginAttempt as string,\n\t\tRememberMeToken as string,\n\t\tPasswordChanged as string,\n\t\tVerifiedPassword as boolean\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource(output(\n\t\tId as short,\n\t\tName as string,\n\t\tEmail as string,\n\t\tPassword as string,\n\t\tUserToken as string,\n\t\tMailSent as boolean,\n\t\tPasswordHash as string,\n\t\tUniversalId as string,\n\t\tUpdatedOn as string,\n\t\tDisabled as boolean,\n\t\tPasswordExpiry as string,\n\t\tFailedLoginAttemps as short,\n\t\tLastFailedLoginAttempt as string,\n\t\tRememberMeToken as string,\n\t\tPasswordChanged as string,\n\t\tVerifiedPassword as boolean\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source2\nsource1, source2 union(byName: false)~> Union1\nDerivedColumn1 derive(Name = md5(left(toString(nextSequence()),3),Name),\n\t\tEmail = md5(left(toString(nextSequence()),3),Email),\n\tpartitionBy('roundRobin', 3)) ~> hashingandsalt\nUnion1 derive(nextseq = left(toString(nextSequence()),3),\n\t\tpartID = partitionId(),\n\t\trand = random(123),\n\t\tstatic = 1) ~> DerivedColumn1\nhashingandsalt sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow15')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Orc2",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DelimitedText4",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tRole as string,\n\t\t{First Name} as string,\n\t\t{Last Name} as string,\n\t\tEmail as string,\n\t\t{Overview. Overview - REMOVED} as string,\n\t\t{Overview. Overview} as string,\n\t\t{Overview. Schedule} as string,\n\t\t{Introduction. Module One guide} as string,\n\t\t{FLL Tryout. Leader roles or core capabilities} as string,\n\t\t{FLL Tryout. Biggest strengths} as string,\n\t\t{FLL Tryout. Most surprising - REMOVED} as string,\n\t\t{Pod 1. Salesforce Values card sort PDF} as string,\n\t\t{Pod 1. Your Leadership Brand. Value One} as string,\n\t\t{Pod 1. Your Leadership Brand. Value Two} as string,\n\t\t{Pod 1. Your Leadership Brand. Value Three} as string,\n\t\t{Pod 1. Your Leadership Brand. Importance} as string,\n\t\t{Pod 1. Your Leadership Brand. My behaviors} as string,\n\t\t{Pod 1. Your Leadership Brand. My brand} as string,\n\t\t{Pod 1. Your Leadership Brand. My best} as string,\n\t\t{Pod 1. Your Leadership Brand. Not my best} as string,\n\t\t{Pod 1. Your Leadership Brand. Statement} as string,\n\t\t{Pod 1. Catch Up. Email} as string,\n\t\t{Pod 1. Catch Up. Takeaways} as string,\n\t\t{Pod 1. Catch Up. Learning areas} as string,\n\t\t{Pod 1. Video Summary} as string,\n\t\t{Virtual Workshop 1. Catch Up. Email} as string,\n\t\t{Virtual Workshop 1. Catch Up. Takeaways} as string,\n\t\t{Virtual Workshop 1. Catch Up. Learning areas} as string,\n\t\t{Stretch Assignment 1. Instructional PDF} as string,\n\t\t{Stretch Assignment 1. L1. Pitfalls - CHANGED} as string,\n\t\t{Stretch Assignment 1. L1. Pitfalls} as string,\n\t\t{Stretch Assignment 1. L1. Actions} as string,\n\t\t{Stretch Assignment 1. L1. Accountable} as string,\n\t\t{Stretch Assignment 1. L1. Impact knowing pitfalls} as string,\n\t\t{Stretch Assignment 1. L1. Do differently - REMOVED} as string,\n\t\t{Stretch Assignment 1. L1. Email worked with - REMOVED} as string,\n\t\t{Stretch Assignment 1. L2. Pitfalls (G1) / Insight (G2...)} as string,\n\t\t{Stretch Assignment 1. L2. Recover (G1) / Advice (G2...)} as string,\n\t\t{Stretch Assignment 1. L2. Learn - REMOVED} as string,\n\t\t{Stretch Assignment 1. L2. Email worked with} as string,\n\t\t{Stretch Assignment 1. L3. Learn} as string,\n\t\t{Stretch Assignment 1. L3. Feedback - REMOVED} as string,\n\t\t{Stretch Assignment 1. L3. Teaching improve} as string,\n\t\t{Stretch Assignment 1. L3. Email worked with} as string,\n\t\t{Pod 2. Committed listening. What did you notice} as string,\n\t\t{Pod 2. Committed listening. Whats in the way} as string,\n\t\t{Pod 2. MBIR. Leadership shift} as string,\n\t\t{Pod 2. MBIR. Leadership shift. Change} as string,\n\t\t{Pod 2. MBIR. Mindset. From} as string,\n\t\t{Pod 2. MBIR. Mindset. To} as string,\n\t\t{Pod 2. MBIR. Mindset. Change} as string,\n\t\t{Pod 2. MBIR. Behavior. From} as string,\n\t\t{Pod 2. MBIR. Behavior. To} as string,\n\t\t{Pod 2. MBIR. Behavior. Change} as string,\n\t\t{Pod 2. MBIR. Impact. From} as string,\n\t\t{Pod 2. MBIR. Impact. To} as string,\n\t\t{Pod 2. MBIR. Impact. Change} as string,\n\t\t{Pod 2. MBIR. Result} as string,\n\t\t{Pod 2. MBIR. Result. Change} as string,\n\t\t{Pod 2. MBIR. Other Comments} as string,\n\t\t{Pod 2. Catch Up. Email} as string,\n\t\t{Pod 2. Catch Up. Takeaways} as string,\n\t\t{Pod 2. Catch Up. Learning areas} as string,\n\t\t{Pod 2. Video Summary} as string,\n\t\t{Stretch Assignment 2. Instructional PDF} as string,\n\t\t{Stretch Assignment 2. L1. MBIR change (G1) / Insights (G2...)} as string,\n\t\t{Stretch Assignment 2. L1. Insights (G1) / Learn (G2...)} as string,\n\t\t{Stretch Assignment 2. L1. Help - REMOVED} as string,\n\t\t{Stretch Assignment 2. L1. Email worked with} as string,\n\t\t{Stretch Assignment 2. L2. MBIR change} as string,\n\t\t{Stretch Assignment 2. L2. Shifts (G1) / Do differently (G2...)} as string,\n\t\t{Stretch Assignment 2. L2. Do differently - REMOVED} as string,\n\t\t{Stretch Assignment 2. L2. Email worked with} as string,\n\t\t{Stretch Assignment 2. L3. Difficult (G1) / Connecting to IDP (G2...)} as string,\n\t\t{Stretch Assignment 2. L3. V2MOM Mindset shift (G1) / Do differently (G2...)} as string,\n\t\t{Stretch Assignment 2. L3. V2MOM Assumptions - REMOVED} as string,\n\t\t{Stretch Assignment 2. L3. V2MOM Do differently - REMOVED} as string,\n\t\t{Stretch Assignment 2. L3. Actions Assumptions - REMOVED} as string,\n\t\t{Stretch Assignment 2. L3. Email worked with} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow16')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DestinationDataset_ws8",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DestinationDataset_ws8",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          {_col0_} as string,",
						"          {_col1_} as string,",
						"          {_col2_} as string,",
						"          {_col3_} as string,",
						"          {_col4_} as string,",
						"          {_col5_} as string,",
						"          {_col6_} as string,",
						"          {_col7_} as string,",
						"          {_col8_} as string,",
						"          {_col9_} as string,",
						"          {_col10_} as string,",
						"          {_col11_} as string,",
						"          {_col12_} as string,",
						"          {_col13_} as string,",
						"          {_col14_} as string,",
						"          {_col15_} as string,",
						"          {_col16_} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          {$oid} as string,",
						"          sessionId as string,",
						"          id as string,",
						"          name as string,",
						"          customer as string,",
						"          clientid as string,",
						"          cohortId as string,",
						"          state as string,",
						"          score as string,",
						"          activityId as string,",
						"          activityName as string,",
						"          moduleId as string,",
						"          moduleName as string,",
						"          stageId as string,",
						"          stageName as string,",
						"          journeyId as string,",
						"          journeyName as string",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/mondelez_dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DestinationDataset_7nn",
								"type": "DatasetReference"
							},
							"name": "journeystructure"
						},
						{
							"dataset": {
								"referenceName": "DestinationDataset_5xq",
								"type": "DatasetReference"
							},
							"name": "mondelezmongodbusers"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dataflow_mdlz",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Flatten1"
						},
						{
							"name": "Flatten2"
						},
						{
							"name": "Flatten3"
						},
						{
							"name": "Join1"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "Filter2"
						},
						{
							"name": "alterRow1"
						},
						{
							"name": "aggregate1"
						},
						{
							"name": "select1"
						},
						{
							"name": "Constantvalue"
						},
						{
							"name": "AddRownumber"
						},
						{
							"name": "TempFilterTest"
						}
					],
					"script": "source(output(\n\t\ttitle as string,\n\t\tjourney as (key as string, value as string)[]\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'documentPerLine') ~> journeystructure\nsource(output(\n\t\t{_id} as ({$oid} as string),\n\t\tjourneys as (journeyName as string, cohortId as string, revisions as ({1} as (states as (id as string, state as string, type as string, completionTime as string)[])))[],\n\t\temail as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'documentPerLine') ~> mondelezmongodbusers\njourneystructure foldDown(unroll(journey, journey),\n\tmapColumn(\n\t\ttitle,\n\t\tkey = journey.key,\n\t\tvalue = journey.value\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Flatten1\nmondelezmongodbusers foldDown(unroll(journeys, journeys),\n\tmapColumn(\n\t\t{_id},\n\t\tjourneyname = journeys.journeyName,\n\t\tcohortid = journeys.cohortId,\n\t\tstates = journeys.revisions.{1}.states\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Flatten2\nFlatten2 foldDown(unroll(states, states),\n\tmapColumn(\n\t\t{_id},\n\t\tjourneyname,\n\t\tcohortid,\n\t\t{states.id} = states.id,\n\t\t{state.status} = states.state,\n\t\t{state.type} = states.type,\n\t\tcompletionTime = states.completionTime\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Flatten3\nFlatten3, Filter1 join({states.id} == Custom,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> Join1\nFlatten1 derive(Custom = regexReplace(key, '[^0-9]','')) ~> DerivedColumn1\nDerivedColumn1 filter(Custom != \"\") ~> Filter1\nJoin1 filter(value!=\"\" && length(value) <50) ~> Filter2\nselect1 alterRow(upsertIf(true())) ~> alterRow1\nalterRow1 aggregate(groupBy(journeyname,\n\t\t{_id},\n\t\tcohortid,\n\t\t{states.id},\n\t\t{state.status},\n\t\t{state.type},\n\t\tvalue,\n\t\tCustom,\n\t\tcompletionTime),\n\tcount = count('1')) ~> aggregate1\nFilter2 select(mapColumn(\n\t\t{_id},\n\t\tjourneyname,\n\t\tcohortid,\n\t\t{states.id},\n\t\t{state.status},\n\t\t{state.type},\n\t\tvalue,\n\t\tCustom,\n\t\tcompletionTime\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select1\naggregate1 derive(Constant_value = 1) ~> Constantvalue\nConstantvalue window(asc(Constant_value, true),\n\tRowNumber = rowNumber()) ~> AddRownumber\nAddRownumber filter(RowNumber<500) ~> TempFilterTest\nTempFilterTest sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\t{_id} = RowNumber,\n\t\tjourneyname,\n\t\tcohortid,\n\t\tid = {states.id},\n\t\tstatus = {state.status},\n\t\ttype = {state.type},\n\t\tvalue,\n\t\tcompletionTime\n\t)) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/mondelez_upsert_testing')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DestinationDataset_7nn",
								"type": "DatasetReference"
							},
							"name": "journeystructure"
						},
						{
							"dataset": {
								"referenceName": "DestinationDataset_5xq",
								"type": "DatasetReference"
							},
							"name": "mondelezmongodbusers"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "RestResource2",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "Flatten1"
						},
						{
							"name": "Flatten2"
						},
						{
							"name": "Flatten3"
						},
						{
							"name": "Join1"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "Filter2"
						},
						{
							"name": "AlterRow1"
						},
						{
							"name": "Filter3"
						}
					],
					"script": "source(output(\n\t\ttitle as string,\n\t\tjourney as (key as string, value as string)[]\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'documentPerLine') ~> journeystructure\nsource(output(\n\t\t{_id} as ({$oid} as string),\n\t\tjourneys as (journeyName as string, cohortId as string, revisions as ({1} as (states as (id as string, state as string, type as string, completionTime as string)[])))[],\n\t\temail as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'documentPerLine') ~> mondelezmongodbusers\njourneystructure foldDown(unroll(journey, journey),\n\tmapColumn(\n\t\ttitle,\n\t\tkey = journey.key,\n\t\tvalue = journey.value\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Flatten1\nmondelezmongodbusers foldDown(unroll(journeys, journeys),\n\tmapColumn(\n\t\t{_id},\n\t\tjourneyname = journeys.journeyName,\n\t\temail,\n\t\tcohortid = journeys.cohortId,\n\t\tstates = journeys.revisions.{1}.states,\n\t\trevisions = journeys.revisions\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Flatten2\nFilter3 foldDown(unroll(states, states),\n\tmapColumn(\n\t\t{_id},\n\t\tjourneyname,\n\t\temail,\n\t\tcohortid,\n\t\t{states.id} = states.id,\n\t\t{state.status} = states.state,\n\t\t{state.type} = states.type\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Flatten3\nFlatten3, Filter1 join({states.id} == Custom,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> Join1\nFlatten1 derive(Custom = regexReplace(key, '[^0-9]','')) ~> DerivedColumn1\nDerivedColumn1 filter(Custom != \"\") ~> Filter1\nJoin1 filter(value!=\"\" && length(value) <50) ~> Filter2\nFilter2 alterRow(upsertIf(true())) ~> AlterRow1\nFlatten2 filter(email == \"gunjan.dadhich@bts.com\") ~> Filter3\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:true,\n\tinsertable:true,\n\tupdateable:true,\n\tupsertable:true,\n\trowRelativeUrl: 'journeyname',\n\tinsertHttpMethod: 'POST',\n\tdeleteHttpMethod: 'DELETE',\n\tupsertHttpMethod: 'PUT',\n\tupdateHttpMethod: 'PATCH',\n\ttimeout: 30,\n\trequestInterval: 0,\n\trequestFormat: ['type' -> 'json', 'outputDateFormat' -> 'MM/dd/yyyy', 'outputTimestampFormat' -> 'MM/dd/yyyy HH:mm:ss'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\t{_id},\n\t\tjourneyname,\n\t\temail,\n\t\tcohortid,\n\t\tid = {states.id},\n\t\tstatus = {state.status},\n\t\ttype = {state.type},\n\t\ttitle,\n\t\tkey,\n\t\tvalue,\n\t\tCustom\n\t)) ~> sink2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Zebra_mongo_DB_source_connection')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "zebra_mongo_db_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MongoDbV2Collection",
				"schema": [],
				"typeProperties": {
					"collection": "users"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Abbottuser')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Abbotuser",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "users"
							},
							{
								"name": "Destination",
								"value": "abbottuser//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "MongoDbV2Source",
								"batchSize": 100
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "AzureBlobStorage1",
										"type": "LinkedServiceReference"
									},
									"path": "abbottuser"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_l80",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Abbottusersink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-05-24T08:33:44Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Action_Users')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Action_users",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "users"
							},
							{
								"name": "Destination",
								"value": "actionusers//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "MongoDbV2Source",
								"batchSize": 100
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".json"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "AzureBlobStorage1",
										"type": "LinkedServiceReference"
									}
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']['$oid']"
										},
										"sink": {
											"name": "_id_$oid",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['journeyId']"
										},
										"sink": {
											"name": "journeys'][0]['journeyId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['journeyName']"
										},
										"sink": {
											"name": "journeyName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['cohortId']"
										},
										"sink": {
											"name": "cohortId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['currentRevision']"
										},
										"sink": {
											"name": "journeys'][0]['currentRevision",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['responses'][0]"
										},
										"sink": {
											"name": "journeys'][0]['revisions_1_responses'][",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['states'][0]['id']"
										},
										"sink": {
											"name": "journeys'][0]['revisions_1_states'][0]['id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['states'][0]['state']"
										},
										"sink": {
											"name": "state",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['states'][0]['type']"
										},
										"sink": {
											"name": "journeys'][0]['revisions_1_states'][0]['type",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['states'][0]['startTime']"
										},
										"sink": {
											"name": "startTime",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['states'][0]['completionTime']"
										},
										"sink": {
											"name": "completionTime",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['analytics']['0e814550107ce4e582d0']['1669738097216_1669738211657']['4202e8cf98aca5c03416']['pages']['0']['attemptDuration']['ColumnLayout_0']['totaltime']"
										},
										"sink": {
											"name": "journeys'][0]['revisions_1_analytics_0e814550107ce4e582d0_1669738097216_1669738211657_4202e8cf98aca5c03416_pages_0_attemptDuration_ColumnLayout_0_totaltime",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['analytics']['0e814550107ce4e582d0']['1669738097216_1669738211657']['4202e8cf98aca5c03416']['pages']['0']['attemptDuration']['Text_1']['totaltime']"
										},
										"sink": {
											"name": "journeys'][0]['revisions_1_analytics_0e814550107ce4e582d0_1669738097216_1669738211657_4202e8cf98aca5c03416_pages_0_attemptDuration_Text_1_totaltime",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['analytics']['0e814550107ce4e582d0']['1669738097216_1669738211657']['4202e8cf98aca5c03416']['pages']['0']['attemptDuration']['Image_2']['totaltime']"
										},
										"sink": {
											"name": "journeys'][0]['revisions_1_analytics_0e814550107ce4e582d0_1669738097216_1669738211657_4202e8cf98aca5c03416_pages_0_attemptDuration_Image_2_totaltime",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['analytics']['0e814550107ce4e582d0']['1669738097216_1669738211657']['4202e8cf98aca5c03416']['pages']['0']['totalPageDuration']"
										},
										"sink": {
											"name": "journeys'][0]['revisions_1_analytics_0e814550107ce4e582d0_1669738097216_1669738211657_4202e8cf98aca5c03416_pages_0_totalPageDuration",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['analytics']['0e814550107ce4e582d0']['1669738185407_1669738363106']['a963f37769c15efa1954']['pages']['0']['attemptDuration']['Text_0']['totaltime']"
										},
										"sink": {
											"name": "journeys'][0]['revisions_1_analytics_0e814550107ce4e582d0_1669738185407_1669738363106_a963f37769c15efa1954_pages_0_attemptDuration_Text_0_totaltime",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['analytics']['0e814550107ce4e582d0']['1669738185407_1669738363106']['a963f37769c15efa1954']['pages']['0']['attemptDuration']['SingleSelectRadio_1']['totaltime']"
										},
										"sink": {
											"name": "journeys'][0]['revisions_1_analytics_0e814550107ce4e582d0_1669738185407_1669738363106_a963f37769c15efa1954_pages_0_attemptDuration_SingleSelectRadio_1_totaltime",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['analytics']['0e814550107ce4e582d0']['1669738185407_1669738363106']['a963f37769c15efa1954']['pages']['0']['totalPageDuration']"
										},
										"sink": {
											"name": "journeys'][0]['revisions_1_analytics_0e814550107ce4e582d0_1669738185407_1669738363106_a963f37769c15efa1954_pages_0_totalPageDuration",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['analytics']['0e814550107ce4e582d0']['1669738185407_1669738363106']['a963f37769c15efa1954']['pages']['1']['attemptDuration']['SingleSelectRadio_0']['totaltime']"
										},
										"sink": {
											"name": "journeys'][0]['revisions_1_analytics_0e814550107ce4e582d0_1669738185407_1669738363106_a963f37769c15efa1954_pages_1_attemptDuration_SingleSelectRadio_0_totaltime",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['analytics']['0e814550107ce4e582d0']['1669738185407_1669738363106']['a963f37769c15efa1954']['pages']['1']['totalPageDuration']"
										},
										"sink": {
											"name": "journeys'][0]['revisions_1_analytics_0e814550107ce4e582d0_1669738185407_1669738363106_a963f37769c15efa1954_pages_1_totalPageDuration",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['analytics']['0e814550107ce4e582d0']['1669738185407_1669738363106']['a963f37769c15efa1954']['pages']['2']['attemptDuration']['MultipleSelectCheckbox_0']['totaltime']"
										},
										"sink": {
											"name": "journeys'][0]['revisions_1_analytics_0e814550107ce4e582d0_1669738185407_1669738363106_a963f37769c15efa1954_pages_2_attemptDuration_MultipleSelectCheckbox_0_totaltime",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['analytics']['0e814550107ce4e582d0']['1669738185407_1669738363106']['a963f37769c15efa1954']['pages']['2']['attemptDuration']['Text_1']['totaltime']"
										},
										"sink": {
											"name": "journeys'][0]['revisions_1_analytics_0e814550107ce4e582d0_1669738185407_1669738363106_a963f37769c15efa1954_pages_2_attemptDuration_Text_1_totaltime",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['analytics']['0e814550107ce4e582d0']['1669738185407_1669738363106']['a963f37769c15efa1954']['pages']['2']['totalPageDuration']"
										},
										"sink": {
											"name": "journeys'][0]['revisions_1_analytics_0e814550107ce4e582d0_1669738185407_1669738363106_a963f37769c15efa1954_pages_2_totalPageDuration",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['analytics']['42ac3f6181d51d5e2a6f']['1650360615085_1651160637226']['88947c49d0356c98012d']['pages']['0']['attemptDuration']['Text_0']['totaltime']"
										},
										"sink": {
											"name": "journeys'][0]['revisions_1_analytics_42ac3f6181d51d5e2a6f_1650360615085_1651160637226_88947c49d0356c98012d_pages_0_attemptDuration_Text_0_totaltime",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['analytics']['42ac3f6181d51d5e2a6f']['1650360615085_1651160637226']['88947c49d0356c98012d']['pages']['0']['attemptDuration']['SingleSelectRadio_1']['totaltime']"
										},
										"sink": {
											"name": "journeys'][0]['revisions_1_analytics_42ac3f6181d51d5e2a6f_1650360615085_1651160637226_88947c49d0356c98012d_pages_0_attemptDuration_SingleSelectRadio_1_totaltime",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['analytics']['42ac3f6181d51d5e2a6f']['1650360615085_1651160637226']['88947c49d0356c98012d']['pages']['0']['totalPageDuration']"
										},
										"sink": {
											"name": "journeys'][0]['revisions_1_analytics_42ac3f6181d51d5e2a6f_1650360615085_1651160637226_88947c49d0356c98012d_pages_0_totalPageDuration",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['analytics']['42ac3f6181d51d5e2a6f']['1650359819496_1650359879754']['4070b349148fa0e1b120']['pages']['0']['attemptDuration']['ColumnLayout_0']['totaltime']"
										},
										"sink": {
											"name": "journeys'][0]['revisions_1_analytics_42ac3f6181d51d5e2a6f_1650359819496_1650359879754_4070b349148fa0e1b120_pages_0_attemptDuration_ColumnLayout_0_totaltime",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['analytics']['42ac3f6181d51d5e2a6f']['1650359819496_1650359879754']['4070b349148fa0e1b120']['pages']['0']['attemptDuration']['Text_1']['totaltime']"
										},
										"sink": {
											"name": "journeys'][0]['revisions_1_analytics_42ac3f6181d51d5e2a6f_1650359819496_1650359879754_4070b349148fa0e1b120_pages_0_attemptDuration_Text_1_totaltime",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['analytics']['42ac3f6181d51d5e2a6f']['1650359819496_1650359879754']['4070b349148fa0e1b120']['pages']['0']['attemptDuration']['Image_2']['totaltime']"
										},
										"sink": {
											"name": "journeys'][0]['revisions_1_analytics_42ac3f6181d51d5e2a6f_1650359819496_1650359879754_4070b349148fa0e1b120_pages_0_attemptDuration_Image_2_totaltime",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['analytics']['42ac3f6181d51d5e2a6f']['1650359819496_1650359879754']['4070b349148fa0e1b120']['pages']['0']['totalPageDuration']"
										},
										"sink": {
											"name": "journeys'][0]['revisions_1_analytics_42ac3f6181d51d5e2a6f_1650359819496_1650359879754_4070b349148fa0e1b120_pages_0_totalPageDuration",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['quizes'][0]"
										},
										"sink": {
											"name": "journeys'][0]['revisions_1_quizes'][",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['placeholder'][0]['title']"
										},
										"sink": {
											"name": "title",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['placeholder'][0]['journeyId']"
										},
										"sink": {
											"name": "journeys'][0]['revisions_1_placeholder'][0]['journeyId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['placeholder'][0]['s3Path']"
										},
										"sink": {
											"name": "s3Path",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['placeholder'][0]['breadcrumb']"
										},
										"sink": {
											"name": "breadcrumb",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['placeholder'][0]['selectedGuid']"
										},
										"sink": {
											"name": "selectedGuid",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['placeholder'][0]['guid']"
										},
										"sink": {
											"name": "guid",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['placeholder'][0]['mappingId']"
										},
										"sink": {
											"name": "mappingId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['coaches'][0]['name']"
										},
										"sink": {
											"name": "journeys'][0]['revisions_1_coaches'][0]['name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['coaches'][0]['email']"
										},
										"sink": {
											"name": "journeys'][0]['revisions_1_coaches'][0]['email",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['coaches'][0]['emailTwo']"
										},
										"sink": {
											"name": "emailTwo",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['coaches'][0]['phoneOne']"
										},
										"sink": {
											"name": "phoneOne",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['coaches'][0]['phoneTwo']"
										},
										"sink": {
											"name": "phoneTwo",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['coaches'][0]['timezone']"
										},
										"sink": {
											"name": "journeys'][0]['revisions_1_coaches'][0]['timezone",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['coaches'][0]['biography']"
										},
										"sink": {
											"name": "biography",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['coaches'][0]['photo']"
										},
										"sink": {
											"name": "photo",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['coaches'][0]['primary']"
										},
										"sink": {
											"name": "primary",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['sessions'][0]['id']"
										},
										"sink": {
											"name": "journeys'][0]['revisions_1_sessions'][0]['id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['sessions'][0]['coachingSessionId']"
										},
										"sink": {
											"name": "coachingSessionId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['sessions'][0]['name']"
										},
										"sink": {
											"name": "journeys'][0]['revisions_1_sessions'][0]['name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['sessions'][0]['type']"
										},
										"sink": {
											"name": "journeys'][0]['revisions_1_sessions'][0]['type",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['sessions'][0]['sessionType']"
										},
										"sink": {
											"name": "sessionType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['sessions'][0]['duration']"
										},
										"sink": {
											"name": "duration",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['sessions'][0]['coach']"
										},
										"sink": {
											"name": "coach",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['sessions'][0]['coachEmail']"
										},
										"sink": {
											"name": "coachEmail",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['sessions'][0]['status']"
										},
										"sink": {
											"name": "status",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['sessions'][0]['position']"
										},
										"sink": {
											"name": "position",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['sessions'][0]['rateable']"
										},
										"sink": {
											"name": "rateable",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['sessions'][0]['authenticateUser']"
										},
										"sink": {
											"name": "authenticateUser",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['sessions'][0]['booking']['id']"
										},
										"sink": {
											"name": "journeys'][0]['revisions_1_sessions'][0]['booking_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['sessions'][0]['booking']['dateTime']"
										},
										"sink": {
											"name": "dateTime",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['sessions'][0]['booking']['zoomLink']"
										},
										"sink": {
											"name": "zoomLink",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['sessions'][0]['bookingWindowFrom']"
										},
										"sink": {
											"name": "bookingWindowFrom",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['sessions'][0]['bookingWindowTo']"
										},
										"sink": {
											"name": "bookingWindowTo",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['sessions'][0]['bookingWindowUntil']"
										},
										"sink": {
											"name": "bookingWindowUntil",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['revisions']['1']['sessions'][0]['activityGUID']"
										},
										"sink": {
											"name": "activityGUID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['role'][0]"
										},
										"sink": {
											"name": "journeys'][0]['role'][",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['hasAcceptedConsent']['value']"
										},
										"sink": {
											"name": "journeys'][0]['hasAcceptedConsent_value",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['hasAcceptedConsent']['timestamp']"
										},
										"sink": {
											"name": "journeys'][0]['hasAcceptedConsent_timestamp",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['hasAcceptedDataPrivacy']['value']"
										},
										"sink": {
											"name": "journeys'][0]['hasAcceptedDataPrivacy_value",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['hasAcceptedDataPrivacy']['timestamp']"
										},
										"sink": {
											"name": "journeys'][0]['hasAcceptedDataPrivacy_timestamp",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['hasRegistered']['value']"
										},
										"sink": {
											"name": "journeys'][0]['hasRegistered_value",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['hasRegistered']['timestamp']"
										},
										"sink": {
											"name": "journeys'][0]['hasRegistered_timestamp",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['isActive']"
										},
										"sink": {
											"name": "journeys'][0]['isActive",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['userProfile']['userTag']"
										},
										"sink": {
											"name": "userTag",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['cohortTitle']"
										},
										"sink": {
											"name": "cohortTitle",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['cohortStartDateTime']['$date']"
										},
										"sink": {
											"name": "journeys'][0]['cohortStartDateTime_$date",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['cohortEndDateTime']['$date']"
										},
										"sink": {
											"name": "journeys'][0]['cohortEndDateTime_$date",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['cohortBlueprint'][0]"
										},
										"sink": {
											"name": "journeys'][0]['cohortBlueprint'][",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['cohortDiscussions'][0]"
										},
										"sink": {
											"name": "journeys'][0]['cohortDiscussions'][",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['isPreviewUser']"
										},
										"sink": {
											"name": "isPreviewUser",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['isTermAndConditionChecked']"
										},
										"sink": {
											"name": "isTermAndConditionChecked",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['currentLoginFailureAttempt']"
										},
										"sink": {
											"name": "currentLoginFailureAttempt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['hasRegistered']['value']"
										},
										"sink": {
											"name": "hasRegistered_value",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['hasRegistered']['timestamp']"
										},
										"sink": {
											"name": "hasRegistered_timestamp",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['hasAcceptedConsent']['value']"
										},
										"sink": {
											"name": "hasAcceptedConsent_value",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['hasAcceptedConsent']['timestamp']"
										},
										"sink": {
											"name": "hasAcceptedConsent_timestamp",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['hasAcceptedDataPrivacy']['value']"
										},
										"sink": {
											"name": "hasAcceptedDataPrivacy_value",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['hasAcceptedDataPrivacy']['timestamp']"
										},
										"sink": {
											"name": "hasAcceptedDataPrivacy_timestamp",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['participatesIn'][0]"
										},
										"sink": {
											"name": "participatesIn'][",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['deviceToken'][0]"
										},
										"sink": {
											"name": "deviceToken'][",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['recommendedContent'][0]"
										},
										"sink": {
											"name": "recommendedContent'][",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['role']"
										},
										"sink": {
											"name": "role",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['customerId']['$oid']"
										},
										"sink": {
											"name": "customerId_$oid",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['fname']"
										},
										"sink": {
											"name": "fname",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['lname']"
										},
										"sink": {
											"name": "lname",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['email']"
										},
										"sink": {
											"name": "email",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['password']"
										},
										"sink": {
											"name": "password",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['oldPasswords'][0]['_id']['$oid']"
										},
										"sink": {
											"name": "oldPasswords'][0]['_id_$oid",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['oldPasswords'][0]['password']"
										},
										"sink": {
											"name": "oldPasswords'][0]['password",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['oldPasswords'][0]['timestamp']['$date']"
										},
										"sink": {
											"name": "oldPasswords'][0]['timestamp_$date",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['isActive']"
										},
										"sink": {
											"name": "isActive",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['createdAt']['$date']"
										},
										"sink": {
											"name": "createdAt_$date",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['updatedAt']['$date']"
										},
										"sink": {
											"name": "updatedAt_$date",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['createdBy']['$oid']"
										},
										"sink": {
											"name": "createdBy_$oid",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['updatedBy']['$oid']"
										},
										"sink": {
											"name": "updatedBy_$oid",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['lastFailedLoginAt']['$date']"
										},
										"sink": {
											"name": "lastFailedLoginAt_$date",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['lastSuccessfulLoginAt']['$date']"
										},
										"sink": {
											"name": "lastSuccessfulLoginAt_$date",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['userBrowserAgent'][0]['_id']['$oid']"
										},
										"sink": {
											"name": "userBrowserAgent'][0]['_id_$oid",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['userBrowserAgent'][0]['userAgent']"
										},
										"sink": {
											"name": "userAgent",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['userBrowserAgent'][0]['ipAddress']"
										},
										"sink": {
											"name": "ipAddress",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['userBrowserAgent'][0]['timestamp']['$date']"
										},
										"sink": {
											"name": "userBrowserAgent'][0]['timestamp_$date",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['__v']"
										},
										"sink": {
											"name": "__v",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['userProfile']['country']"
										},
										"sink": {
											"name": "country",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['userProfile']['timezone']"
										},
										"sink": {
											"name": "userProfile_timezone",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['userProfile']['town']"
										},
										"sink": {
											"name": "town",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['userProfile']['language']"
										},
										"sink": {
											"name": "language",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['userProfile']['region']"
										},
										"sink": {
											"name": "region",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['userProfile']['descriptiveAudio']"
										},
										"sink": {
											"name": "descriptiveAudio",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['bookmarks']['currentRevision']"
										},
										"sink": {
											"name": "bookmarks_currentRevision",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['bookmarks']['revisions']['1']['activities'][0]"
										},
										"sink": {
											"name": "bookmarks_revisions_1_activities'][",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['bookmarks']['revisions']['1']['resources'][0]"
										},
										"sink": {
											"name": "bookmarks_revisions_1_resources'][",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['notificationCount']"
										},
										"sink": {
											"name": "notificationCount",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['themes']['currentRevision']"
										},
										"sink": {
											"name": "themes_currentRevision",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['themes']['revisions']['1']['themes'][0]"
										},
										"sink": {
											"name": "themes_revisions_1_themes'][",
											"type": "String"
										}
									}
								],
								"collectionReference": "",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_v3t",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_v3t",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Chevron_mongo_project')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Microsost mongo to azure",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "users"
							},
							{
								"name": "Destination",
								"value": "microsoftoutputv1//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "MongoDbV2Source",
								"batchSize": 100,
								"filter": "{ email: /^\\d+$/, 'userProfile.selectedjourneyId': 'c915a00346407fe85c03' }",
								"cursorMethods": {
									"project": "{_id: 1,email: 1,journeys:1}"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']['$oid']"
										},
										"sink": {
											"path": "id"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['journeyId']"
										},
										"sink": {
											"path": "journeyId"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['journeyName']"
										},
										"sink": {
											"path": "journeyName"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['cohortId']"
										},
										"sink": {
											"path": "cohortId"
										}
									},
									{
										"source": {
											"path": "$['journeys'][0]['isomers']"
										},
										"sink": {
											"path": "isomers"
										}
									},
									{
										"source": {
											"path": "$['email']"
										},
										"sink": {
											"path": "email"
										}
									}
								],
								"collectionReference": ""
							}
						},
						"inputs": [
							{
								"referenceName": "mongo_chevron",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_3jq",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-05-24T08:33:44Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_m4a')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_m4a",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "users"
							},
							{
								"name": "Destination",
								"value": "chevroncorporationdata//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "MongoDbV2Source",
								"batchSize": 100
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"filePattern": "setOfObjects"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_m4a",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_m4a",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-05-24T08:34:13Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copyoutpursqlmdlz')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_d7i",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "mondelezinternationa-output//"
							},
							{
								"name": "Destination",
								"value": ".Azure Blob Storage file"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "id",
										"value": "12"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "part-merged.csv",
									"enablePartitionDiscovery": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "String"
										},
										"sink": {
											"name": "id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "journeyname",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "journeyname",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "email",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "email",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "cohortid",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "cohortId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Content_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Content_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "status",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "title",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "title",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Content_id_Custom",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Content_id_Custom",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_d7i",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_d7i",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-05-24T08:33:44Z"
			},
			"dependsOn": []
		}
	]
}